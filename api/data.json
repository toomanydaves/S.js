{
    "project": {
        "name": "LearnShip JS API",
        "version": "0.0.1",
        "logo": "/images/api/logo.png"
    },
    "files": {
        "js/ls/ui/Dropdown.js": {
            "name": "js/ls/ui/Dropdown.js",
            "modules": {
                "ui": 1
            },
            "classes": {
                "ui.Dropdown": 1
            },
            "fors": {},
            "namespaces": {
                "ui": 1
            }
        },
        "js/ls/view/Path.js": {
            "name": "js/ls/view/Path.js",
            "modules": {
                "view": 1
            },
            "classes": {
                "view.Path": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "js/ls/view/Viewer.js": {
            "name": "js/ls/view/Viewer.js",
            "modules": {},
            "classes": {
                "view.Viewer": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "js/ls/view/Viewport.js": {
            "name": "js/ls/view/Viewport.js",
            "modules": {},
            "classes": {
                "view.Viewport": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        }
    },
    "modules": {
        "ui": {
            "name": "ui",
            "submodules": {},
            "classes": {
                "ui.Dropdown": 1
            },
            "fors": {},
            "namespaces": {
                "ui": 1
            },
            "tag": "module",
            "file": "js/ls/ui/Dropdown.js",
            "line": 5
        },
        "view": {
            "name": "view",
            "submodules": {},
            "classes": {
                "view.Path": 1,
                "view.Viewer": 1,
                "view.Viewport": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "js/ls/view/Viewport.js",
            "line": 5
        }
    },
    "classes": {
        "ui.Dropdown": {
            "name": "ui.Dropdown",
            "shortname": "ui.Dropdown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "ui",
            "file": "js/ls/ui/Dropdown.js",
            "line": 5,
            "description": "Dropdown is a solution for showing and hiding a set of options for the user to choose from.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "jQuery object to use as the trigger for the dropdown whose next sibling will be used as the\nmenu",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "An object to use to override the default settings",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "view.Path": {
            "name": "view.Path",
            "shortname": "view.Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "view",
            "file": "js/ls/view/Path.js",
            "line": 5,
            "description": "Path is a used to display a breadcrumb list of the viewpoints currently loaded in the application.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "A jQuery object containing the element to use as the basis for the path",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "An object to use to override the default settings",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "view.Viewer": {
            "name": "view.Viewer",
            "shortname": "view.Viewer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "view",
            "file": "js/ls/view/Viewer.js",
            "line": 8,
            "description": "Viewer is a solution for communicating the user's current context within the application. Context in this \nsense refers to a set of related viewpoints. Each viewpoint has a name recognizable to the user and a unique \nreference to its contents.\n\nViewer uses a Viewport and a Path instance for display purposes. The path shows the name and order of \nviewpoints in the current context; the viewport displays the contents of the viewpoints.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "jQuery object containing the element to use as the basis for the viewer",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "An object to use to override the default settings",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "view.Viewport": {
            "name": "view.Viewport",
            "shortname": "view.Viewport",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "view",
            "namespace": "view",
            "file": "js/ls/view/Viewport.js",
            "line": 5,
            "description": "Viewport is used to display the screens holding the content of individual viewpoints. These screens can be\nshifted left and right, as the user moves deeper or shallower in a particular context, or replaced entirely when\nthe context changes.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "$el",
                    "description": "A jQuery object containing the element to use as the basis for the viewport",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "An object to use to override the default settings",
                    "type": "Object",
                    "optional": true
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 16,
            "description": "The configuration for the current dropdown instance",
            "itemtype": "property",
            "name": "_settings",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 23,
            "description": "A jQuery object containing the element used as the trigger for the dropdown",
            "itemtype": "property",
            "name": "_$el",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 30,
            "description": "A jQuery object containing the element used as the menu for the dropdown",
            "itemtype": "property",
            "name": "_$menu",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 37,
            "description": "When the dropdown receives a click it will close all other dropdowns and toggle its state.",
            "itemtype": "event",
            "name": "click.dropdown",
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 56,
            "description": "Whenever there is a click, all open dropdowns should close.",
            "itemtype": "event",
            "name": "click.dropdown",
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 61,
            "description": "Close all dropdowns",
            "itemtype": "method",
            "name": "closeDropdowns",
            "static": 1,
            "params": [
                {
                    "name": "$keepOpen",
                    "description": "A jQuery object containing dropdowns to keep open",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 70,
            "description": "The number of existing ui.Dropdown instances",
            "itemtype": "property",
            "name": "count",
            "type": "{Number}",
            "static": 1,
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 78,
            "description": "The function that is called in order to close the dropbox",
            "itemtype": "attribute",
            "name": "close",
            "type": "{Function}",
            "static": 1,
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 95,
            "description": "The function that is called in order to open the dropbox",
            "itemtype": "attribute",
            "name": "open",
            "type": "{Function}",
            "static": 1,
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 114,
            "description": "Open the dropdown menu",
            "itemtype": "method",
            "name": "open",
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/ui/Dropdown.js",
            "line": 121,
            "description": "Close the dropdown menu",
            "itemtype": "method",
            "name": "close",
            "class": "ui.Dropdown",
            "module": "ui",
            "namespace": "ui"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 14,
            "description": "The configuration for the current path instance",
            "itemtype": "property",
            "name": "_settings",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 21,
            "description": "A jQuery object indicating what entry in the path is currently active..",
            "itemtype": "property",
            "name": "_$pointer",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 29,
            "description": "A jQuery object containing the element used as the basis for the path",
            "itemtype": "property",
            "name": "_$el",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 38,
            "description": "The number of existing Path instances",
            "itemtype": "property",
            "name": "count",
            "type": "{Number}",
            "static": 1,
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 46,
            "description": "When removing then adding new entries in the path, the amount to pause in between",
            "itemtype": "attribute",
            "name": "delay",
            "type": "{Number}",
            "static": 1,
            "default": "300(ms)",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 54,
            "description": "The duration for an entry to animate into/out of position",
            "itemtype": "attribute",
            "name": "duration",
            "type": "{Number}",
            "static": 1,
            "default": "700(ms)",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 62,
            "description": "The padding to insert between entries",
            "itemtype": "attribute",
            "name": "pathPadding",
            "type": "{Number}",
            "static": 1,
            "default": "8(px)",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 70,
            "description": "The path to the image to use for the pointer underneath the path",
            "itemtype": "attribute",
            "name": "pointerPng",
            "type": "{String}",
            "static": 1,
            "default": "'/js/jquery/plugins/jquery.lsview.pointer.png'",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 80,
            "description": "Pop the top entry off the path.",
            "itemtype": "method",
            "name": "pop",
            "params": [
                {
                    "name": "callback",
                    "description": "A function to call after the entry has been removed from the path",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 104,
            "description": "Push a new entry onto the path.",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "name",
                    "description": "The name that should appear in the path for the entry",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "A function to call after the entry has been added to the path",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 143,
            "description": "When the path is activated, the last entry becomes the active entry and the pointer is placed underneath it;\nall others become clickable.",
            "itemtype": "method",
            "name": "activate",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 169,
            "description": "When the path is in transition, deactive the active level and hide the pointer.",
            "itemtype": "method",
            "name": "deactivate",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Path.js",
            "line": 177,
            "description": "Remove all path elements.",
            "itemtype": "method",
            "name": "",
            "class": "view.Path",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 23,
            "description": "The configuration for the current viewer instance",
            "itemtype": "property",
            "name": "_settings",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 30,
            "description": "Active is a flag to capture whether the viewer is in a stable, active state and can accept commands, or \nin the process of changing, during which it must be deactivated.",
            "itemtype": "property",
            "name": "_active",
            "type": "{Boolean}",
            "default": "true",
            "access": "private",
            "tagname": "",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 39,
            "description": "Viewpoints is an array of all the viewpoints loaded in the viewer with the active viewpoint on top.",
            "itemtype": "property",
            "name": "_viewpoints",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 46,
            "description": "The path is a reference to the view.Path instance responsible for displaying the name of the active \nviewpoint and its parents.",
            "itemtype": "property",
            "name": "_path",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 54,
            "description": "The viewport is a reference to the LS.Viewport instance responsible for displaying the markup returned by \na call to a viewpoint URL.",
            "itemtype": "property",
            "name": "_viewport",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 62,
            "description": "A jQuery object containing the element used as the basis for the view",
            "itemtype": "property",
            "name": "_$el",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 71,
            "description": "The number of existing Viewer instances",
            "itemtype": "property",
            "name": "count",
            "type": "{Number}",
            "static": 1,
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 78,
            "description": "The default settings that will be used when a new viewer is created",
            "itemtype": "property",
            "name": "",
            "type": "{Object}",
            "static": 1,
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 85,
            "description": "When removing then adding new viewpoints, the amount to pause in between.",
            "itemtype": "attribute",
            "name": "delay",
            "type": "{Number}",
            "static": 1,
            "default": "300(ms)",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 93,
            "description": "The duration for a viewpoint to come into/out of position",
            "itemtype": "attribute",
            "name": "duration",
            "type": "{Number}",
            "static": 1,
            "default": "700(ms)",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 101,
            "description": "The padding to insert between entries in the path",
            "itemtype": "attribute",
            "name": "pathPadding",
            "type": "{Number}",
            "static": 1,
            "default": "8(px)",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 109,
            "description": "The padding to insert around screens in the viewport",
            "itemtype": "attribute",
            "name": "viewportPadding",
            "type": "{Number}",
            "static": 1,
            "default": "8(px)",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 117,
            "description": "The path to the GIF animation to use when waiting for data to load in a screen",
            "itemtype": "attribute",
            "name": "loadingGif",
            "type": "{String}",
            "static": 1,
            "default": "'/images/ajax/loading.gif'",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 125,
            "description": "The path to the image to use for the pointer underneath the path",
            "itemtype": "attribute",
            "name": "pointerPng",
            "type": "{String}",
            "static": 1,
            "default": "'/js/jquery/plugins/jquery.lsview.pointer.png'",
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 135,
            "description": "Activate the path and viewport, and change viewer status to active.",
            "itemtype": "method",
            "name": "_activate",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A function to call once the viewer is active",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 157,
            "description": "Deactivate the path and viewport, and change viewer status to not active",
            "itemtype": "method",
            "name": "_deactivate",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A function to call once the viewer is active",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 179,
            "description": "Add an array of viewpoints to the viewer.",
            "itemtype": "method",
            "name": "_addViewpoints",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "viewpoints",
                    "description": "An array of objects containing a name and a URL",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "A function to call once the path and viewport have finished loading the \nviewpoints' content",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 220,
            "description": "Remove viewpoints from the viewer.",
            "itemtype": "method",
            "name": "_removeViewpoints",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "numberOfViewpoints",
                    "description": "The number of viewpoints to remove from the current context",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "A function to call once the viewpoints have been removed and a parent \nviewpoint has been made active in the path and viewport",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 252,
            "description": "The viewpoints passed to the method will be compared with those currently loaded until a point of \ndiversion is found. From that point on all existing viewpoints will be removed and any new viewpoints \nwill be added.",
            "itemtype": "method",
            "name": "establishContext",
            "params": [
                {
                    "name": "viewpoints",
                    "description": "An array of objects containing a name and a url",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "A function to call once the path and viewport have finished loading the \nviewpoints' content",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewer.js",
            "line": 295,
            "description": "Clean up and remove the viewer.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "callback",
                    "description": "A function to call once the viewer has been removed",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Viewer",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 16,
            "description": "The configuration for the current viewport instance",
            "itemtype": "property",
            "name": "_settings",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 23,
            "description": "A jQuery object containing the element used as the basis for the viewport",
            "itemtype": "property",
            "name": "_$el",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 32,
            "description": "The number of existing viewport instances",
            "itemtype": "property",
            "name": "count",
            "type": "{Number}",
            "static": 1,
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 40,
            "description": "When removing then adding new screens in the viewport, the amount to pause in between",
            "itemtype": "attribute",
            "name": "delay",
            "type": "{Number}",
            "static": 1,
            "default": "300(ms)",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 48,
            "description": "The duration for a screen to animate into/out of position",
            "itemtype": "attribute",
            "name": "duration",
            "type": "{Number}",
            "static": 1,
            "default": "700(ms)",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 56,
            "description": "The padding to insert between the screen and the viewport",
            "itemtype": "attribute",
            "name": "viewportPadding",
            "type": "{Number}",
            "static": 1,
            "default": "8(px)",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 66,
            "description": "Shift the screens right, removing the previously active screen.",
            "itemtype": "method",
            "name": "shiftRight",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 101,
            "description": "Shift the screens left, adding a new, active screen.",
            "itemtype": "method",
            "name": "shiftLeft",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to call to get the content for the screen",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "A map or string to send along with the request",
                    "type": "Object||String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "A function to call once the screen has been positioned in the viewport",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 123,
            "description": "The event to bind to when a screen is in position and the content has been loaded.",
            "itemtype": "event",
            "name": "lsviewport.screen-ready",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 153,
            "description": "A stub which can be used to execute code when a transition is finished",
            "itemtype": "method",
            "name": "activate",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 158,
            "description": "A stub which can be used to execute code before a transition begins",
            "itemtype": "method",
            "name": "deactivate",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        },
        {
            "file": "js/ls/view/Viewport.js",
            "line": 163,
            "description": "Remove all viewport elements",
            "itemtype": "method",
            "name": "remove",
            "class": "view.Viewport",
            "module": "view",
            "namespace": "view"
        }
    ]
}